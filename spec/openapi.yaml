openapi: 3.0.0
info:
  version: '0.0.1'
  title: Pay Global Platform
  termsOfService: 'https://payglobal.me/terms.html'
  contact:
    name: Pay Global
    url: 'https://payglobal.me/contact.html'
  x-logo:
    url: 'http://docs.api.payglobal.me/img/logo.png'
  description: |
    
tags:
  - name: Client Authorization
    description: This operations are performed by the **client application** to obtain an `access_token` in exchange of the `client_token`.
servers:
  - url: 'http://sandbox.api.payglobal.me/business/api'
  - url: 'http://api.payglobal.me/business/api'

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL. 
paths:
  '/auth/token':
    get:
      tags: 
        - Client Authorization
      summary: Get Access Token
      description: The client application is required to generate a `client_token` in the JWT format and pass as the bearer token to the request. Please read more about the `client_token` in the description of the api above.
      operationId: 'auth/token'
      security: 
        - client_token: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenSuccessResponse'
  '/auth/token/renew':
    get:
      tags: 
        - Client Authorization
      summary: Renew Access Token
      description: The client application can renew it's expiring `access_token` (before it is expired). Please read more about the `access_token` in the description of the api above.
      operationId: 'auth/token/renew'
      security: 
        - access_token: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenSuccessResponse'
                
components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        ResponseCode:
          type: number
          example: 200
        ResponseMessage:
          type: string
          example: 'Success'
    TokenSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            ResponseData:
              type: object
              properties:
                Token:
                  type: string
                  format: JWT
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiY2xpZW50SUQiOiJiNjNhYzdlYS05MjFkLWMzMzQtMDU3MS04MmRkNDk5ZTg1ZmEiLCJpYXQiOjE1MTYyMzkwMjJ9.2URq7K4IWcOURcgJmeXE8-eAoltt1_xDNMWX_2TAnI0'        
  securitySchemes:
    access_token :
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: A token generated by the server to grant access to the api calls made by the client. The `access_token` is in JWT format.
    client_token :
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: A token generated by the client to get `access_token` in exchange. The `client_token` is in JWT format.